#!/usr/bin/env node
'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _run = require('dist-es6/lib/run');

var runEs = _interopRequireWildcard(_run);

var _esnextAsync = require('esnext-async');

var _reflect = require('jasmine-es6/lib/reflect');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _esnextAsync.run)((0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
  return _regenerator2.default.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.t0 = process.env.JASMINE_CONFIG_PATH;

          if (_context.t0) {
            _context.next = 5;
            break;
          }

          _context.next = 4;
          return (0, _reflect.configPath)();

        case 4:
          _context.t0 = _context.sent;

        case 5:
          process.env.JASMINE_CONFIG_PATH = _context.t0;

          runEs.module(require.resolve('jasmine/bin/jasmine'));

        case 7:
        case 'end':
          return _context.stop();
      }
    }
  }, _callee, undefined);
})));